# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestingsignupfunctionality():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_testsignup(self):
        self.driver.get("https://www.bestbuy.com/")
        self.driver.set_window_size(1440, 900)
        self.driver.find_element(By.CSS_SELECTOR, ".v-p-top-xxs:nth-child(3)").click()
        self.driver.find_element(By.LINK_TEXT, "Create Account").click()
        self.driver.find_element(By.ID, "firstName").click()
        self.driver.find_element(By.ID, "firstName").send_keys("Khaled")
        self.driver.find_element(By.ID, "lastName").send_keys("Blbesie")
        self.driver.find_element(By.ID, "email").send_keys("Test@gmail.com")
        self.driver.find_element(By.ID, "fld-p1").send_keys("Aa123456!@##")
        self.driver.find_element(By.ID, "reenterPassword").send_keys("Aa123456!@##")
        self.driver.find_element(By.ID, "phone").click()
        self.driver.find_element(By.ID, "phone").send_keys("053‑322‑3412")
        self.driver.find_element(By.CSS_SELECTOR, ".c-button-secondary").click()
        self.driver.close()

    def test_testsignupwithblankmandatoryfield(self):
        self.driver.get("https://www.bestbuy.com/")
        self.driver.set_window_size(1440, 900)
        element = self.driver.find_element(By.CSS_SELECTOR, ".v-p-right-xxs:nth-child(2)")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        self.driver.find_element(By.CSS_SELECTOR, ".v-p-right-xxs:nth-child(2)").click()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element, 0, 0).perform()
        self.driver.find_element(By.LINK_TEXT, "Create Account").click()
        self.driver.find_element(By.CSS_SELECTOR, ".c-button-secondary").click()
        element = self.driver.find_element(By.CSS_SELECTOR, ".c-button-secondary")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element, 0, 0).perform()

    def test_testsignupwithincorrectvalues(self):
        self.driver.get("https://www.bestbuy.com/")
        self.driver.set_window_size(1440, 900)
        self.driver.find_element(By.CSS_SELECTOR, ".v-p-right-xxs:nth-child(2)").click()
        self.driver.find_element(By.LINK_TEXT, "Create Account").click()
        self.driver.find_element(By.ID, "firstName").click()
        self.driver.find_element(By.ID, "firstName").send_keys("11")
        element = self.driver.find_element(By.ID, "lastName")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".cia-form")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        self.driver.find_element(By.CSS_SELECTOR, ".cia-form").click()
        self.driver.find_element(By.ID, "lastName").send_keys("22")
        element = self.driver.find_element(By.ID, "email")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".cia-form")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        self.driver.find_element(By.CSS_SELECTOR, ".cia-form").click()
        self.driver.find_element(By.ID, "email").send_keys("00")
        element = self.driver.find_element(By.ID, "fld-p1")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".c-overlay-wrapper:nth-child(3) > .overlayTrigger")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        self.driver.find_element(By.CSS_SELECTOR, ".c-overlay-wrapper:nth-child(3) > .overlayTrigger").click()
        self.driver.find_element(By.ID, "fld-p1").click()
        self.driver.find_element(By.ID, "fld-p1").click()
        self.driver.find_element(By.ID, "fld-p1").send_keys("231")
        self.driver.find_element(By.ID, "reenterPassword").click()
        self.driver.find_element(By.ID, "reenterPassword").send_keys("123")
        self.driver.find_element(By.ID, "phone").click()
        element = self.driver.find_element(By.CSS_SELECTOR, ".c-button-secondary")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element, 0, 0).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".c-button-secondary")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        element = self.driver.find_element(By.CSS_SELECTOR, ".cia-form")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        self.driver.find_element(By.CSS_SELECTOR, ".cia-form").click()
        self.driver.close()


'''
    def setUp(self):
        options = webdriver.ChromeOptions()

        chrome_driver_binary = "./drivers/chromedriver"
        ser_chrome = ChromeService(chrome_driver_binary)
        self.driver = webdriver.Chrome(service=ser_chrome, options=options)

        self.addCleanup(self.driver.close)  # instead of writing self.driver.close() in every method

    def test_page_title(self):
        self.driver.get('http://www.automationpractice.com')
        title = self.driver.title
        self.assertEqual("My Store", title)

    def test_google_page_title(self):
        self.driver.get('https://www.google.com')
        title = self.driver.title
        self.assertEqual("Google", title)

    def test_search_for_products(self):
        self.driver.get('http://www.automationpractice.com')
        search_field = self.driver.find_element(By.CSS_SELECTOR, '#search_query_top')
        search_field.click()
        search_field.send_keys("shirt")
        search_field.send_keys(Keys.ENTER)
        # time.sleep(20)
        product_title_field = self.driver.find_element(By.CSS_SELECTOR, '#center_column > ul > li > div > div.right-block > h5 > a')
        text = product_title_field.text
        self.assertIn("shirt",text)

    def test_newsletter_register(self):
        self.driver.get()
        newsLetter_field = self.driver.find_element(By.CSS_SELECTOR, '#newsletter-input')
        newsLetter_field.click()
        newsLetter_field.send_keys("abc11abc123@gmail.com")
        newsLetter_field.send_keys(Keys.ENTER)
        # self.driver.execute_script('console.log("self.driver.find_element(By.CSS_SELECTOR, '#columns > p')')
        self.assertIsNotNone(self.driver.find_element(By.CSS_SELECTOR, '#columns > p'))
'''